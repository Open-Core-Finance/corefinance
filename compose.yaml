version: '3'

services:
  postgresql:
    image: "postgres:16"
    ports:
      - "${DB_BIND_PORT}:${DB_PORT}"
    container_name: corefinance_postgresql
    environment:
      - POSTGRES_USER=postgres # The PostgreSQL user (useful to connect to the database)
      - POSTGRES_PASSWORD=postgres # The PostgreSQL password (useful to connect to the database)
      #- POSTGRES_DB=kuniv # The PostgreSQL default database (automatically created at first launch)
      - POSTGRES_HOST=0.0.0.0
    volumes:
      - ./share-resources/docker-scripts/create-db.sql:/scripts/create-db.sql
      - ./share-resources/docker-scripts/create-db.sh:/docker-entrypoint-initdb.d/create-db.sh
  combinednontenancy:
    build:
      args:
        - GIT_COMMIT=${GIT_COMMIT}
        - PROJECT_NAME=combined-nontenancy
      context: .
      dockerfile: share-resources/Dockerfile
#    ports:
#      - "9091-9093:${userprofile_port}"
#    container_name: userprofile_service_1
    depends_on:
      - postgresql
      - kafka
    environment:
      - DB_PORT=${DB_PORT}
      - DB_HOST=${DB_HOST}
      - DB_NAME=core_finance_combined_nontenancy
      - SERVICE_ENV=local
      - SERVICE_PORT=${combined_nontenancy_port}
      - GIT_COMMIT=${GIT_COMMIT}
      - GEOCODE_SERVICE_URL=http://corefinance-ngnix-server:87
      - PRODUCT_SERVICE_URL=http://corefinance-ngnix-server:82
    deploy:
      mode: replicated
      replicas: 1

  combinedproductaccount:
    build:
      args:
        - GIT_COMMIT=${GIT_COMMIT}
        - PROJECT_NAME=combined-product-account
      context: .
      dockerfile: share-resources/Dockerfile
#    ports:
#      - "9191-9193:${combined_product_account_port}"
#    container_name: combined_product_account_service_1
    depends_on:
      - postgresql
      - kafka
      - combinednontenancy
    environment:
      - DB_PORT=${DB_PORT}
      - DB_HOST=${DB_HOST}
      - DB_NAME=core_finance_combined_product_account
      - SERVICE_ENV=local
      - SERVICE_PORT=${combined_product_account_port}
      - GIT_COMMIT=${GIT_COMMIT}
      - GEOCODE_SERVICE_URL=http://corefinance-ngnix-server:87
      - PRODUCT_SERVICE_URL=http://corefinance-ngnix-server:82
    deploy:
      mode: replicated
      replicas: 2

  ngnix-server:
#    image: nginx:1.25.4
    build:
      args:
        - GIT_COMMIT=${GIT_COMMIT}
        - PROJECT_NAME=adminweb
      context: .
      dockerfile: share-resources/Dockerfile-AdminWeb
    container_name: corefinance-ngnix-server
    ports:
      - "9090:80" # Admin Web
      - "9091:81" # Userprofile
      - "9092:82" # Product
      - "9093:83" # Customer
      - "9094:84" # GL Account
      - "9095:85" # Deposit Account
      - "9096:86" # Loan Account
      - "9097:87" # Geocode
      - "9098:88" # Payment
      - "9099:89" # Payment
    depends_on:
      - postgresql
      - kafka
      - combinednontenancy
      - combinedproductaccount
    volumes:
      - ./share-resources/docker-scripts/ngnix.conf:/etc/nginx/nginx.conf
      - ./share-resources/docker-scripts/nginx-combined-nontenancy.conf:/etc/nginx/conf.d/default.conf
      - ./share-resources/docker-scripts/nginx-combined-product-account.conf:/etc/nginx/conf.d/combined-product-account.conf
      - ./share-resources/docker-scripts/nginx-adminweb.conf:/etc/nginx/conf.d/nginx-adminweb.conf
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
